 outp | addr | data

  0:0 |    0 | 04 00 ; load a, #0x00
  2:0 |    2 | 08 00 ; load b, #0x00
  4:0 |    4 | 20    ; and a, b
  5:0 |    5 | 78 00 ; assert a, #0x00
  7:0 |    7 | 04 00 ; load a, #0x00
  9:0 |    9 | 08 ff ; load b, #0xFF
  b:0 |    b | 20    ; and a, b
  c:0 |    c | 78 00 ; assert a, #0x00
  e:0 |    e | 04 ff ; load a, #0xFF
 10:0 |   10 | 08 ff ; load b, #0xFF
 12:0 |   12 | 20    ; and a, b
 13:0 |   13 | 78 ff ; assert a, #0xFF
 15:0 |   15 | 04 12 ; load a, #0x12
 17:0 |   17 | 08 34 ; load b, #0x34
 19:0 |   19 | 20    ; and a, b
 1a:0 |   1a | 78 10 ; assert a, #0x10
 1c:0 |   1c | 04 00 ; load a, #0x00
 1e:0 |   1e | 08 00 ; load b, #0x00
 20:0 |   20 | 24    ; or a, b
 21:0 |   21 | 78 00 ; assert a, #0x00
 23:0 |   23 | 04 00 ; load a, #0x00
 25:0 |   25 | 08 ff ; load b, #0xFF
 27:0 |   27 | 24    ; or a, b
 28:0 |   28 | 78 ff ; assert a, #0xFF
 2a:0 |   2a | 04 ff ; load a, #0xFF
 2c:0 |   2c | 08 ff ; load b, #0xFF
 2e:0 |   2e | 24    ; or a, b
 2f:0 |   2f | 78 ff ; assert a, #0xFF
 31:0 |   31 | 04 12 ; load a, #0x12
 33:0 |   33 | 08 34 ; load b, #0x34
 35:0 |   35 | 24    ; or a, b
 36:0 |   36 | 78 36 ; assert a, #0x36
 38:0 |   38 | 04 00 ; load a, #0x00
 3a:0 |   3a | 08 00 ; load b, #0x00
 3c:0 |   3c | 28    ; xor a, b
 3d:0 |   3d | 78 00 ; assert a, #0x00
 3f:0 |   3f | 04 00 ; load a, #0x00
 41:0 |   41 | 08 ff ; load b, #0xFF
 43:0 |   43 | 28    ; xor a, b
 44:0 |   44 | 78 ff ; assert a, #0xFF
 46:0 |   46 | 04 ff ; load a, #0xFF
 48:0 |   48 | 08 ff ; load b, #0xFF
 4a:0 |   4a | 28    ; xor a, b
 4b:0 |   4b | 78 00 ; assert a, #0x00
 4d:0 |   4d | 04 12 ; load a, #0x12
 4f:0 |   4f | 08 34 ; load b, #0x34
 51:0 |   51 | 28    ; xor a, b
 52:0 |   52 | 78 26 ; assert a, #0x26
 54:0 |   54 | 04 00 ; load a, #0x00
 56:0 |   56 | 2c    ; lshift a
 57:0 |   57 | 78 00 ; assert a, #0x00
 59:0 |   59 | 04 02 ; load a, #0x02
 5b:0 |   5b | 2c    ; lshift a
 5c:0 |   5c | 78 04 ; assert a, #0x04
 5e:0 |   5e | 04 ff ; load a, #0xFF
 60:0 |   60 | 2c    ; lshift a
 61:0 |   61 | 78 fe ; assert a, #0xFE
 63:0 |   63 | 04 12 ; load a, #0x12
 65:0 |   65 | 2c    ; lshift a
 66:0 |   66 | 78 24 ; assert a, #0x24
 68:0 |   68 | 04 00 ; load a, #0x00
 6a:0 |   6a | 2e    ; rshift a
 6b:0 |   6b | 78 00 ; assert a, #0x00
 6d:0 |   6d | 04 02 ; load a, #0x02
 6f:0 |   6f | 2e    ; rshift a
 70:0 |   70 | 78 01 ; assert a, #0x01
 72:0 |   72 | 04 ff ; load a, #0xFF
 74:0 |   74 | 2e    ; rshift a
 75:0 |   75 | 78 7f ; assert a, #0x7F
 77:0 |   77 | 04 12 ; load a, #0x12
 79:0 |   79 | 2e    ; rshift a
 7a:0 |   7a | 78 09 ; assert a, #0x09
 7c:0 |   7c | 7f    ; halt
